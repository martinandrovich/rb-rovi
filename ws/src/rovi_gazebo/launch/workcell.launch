<launch>

	<!-- ARGUMENTS -->

	<!-- robot pose [x, y, z] -->
	<arg name="robot_pose"  doc="The pose of the robot spawn location." default="-x 0.1 -y 0.5 -z 0.74"/>

	<!-- camera pose [x, y, z, R, P, Y] -->
	<!--<arg name="camera_pose" doc="The pose of the camera spawn location." default="-x 0.4 -y 1.4 -z 1.5 -R 0.0 -P 1.0 -Y -1.5707"/>-->
	<arg name="camera_pose" doc="The pose of the camera spawn location." default="-x 0.45 -y 1.0 -z 1.5 -R 0.0 -P 1.5707 -Y 0.0"/>

	<arg name="kinect_pose" doc="The pose of the kinect spawn location." default="-x 0.4 -y 1.96 -z 1.28 -R 0.014188 -P 0.690494 -Y -1.570168"/>
	<arg name="projector_pose" doc="The pose of the camera spawn location."   default="-x 0.4 -y 1.4 -z 1.5 -R 0.0 -P 1.0 -Y 1.5707"/>
	
	<!-- <arg name="camera_pose" doc="The pose of the camera spawn location." default="-x 0.4 -y 1.0 -z 1.5 -R 0.0 -P 1.5707 -Y -1.5707"/> -->
	<!-- <arg name="kinect_pose" doc="The pose of the kinect sensor spawn location." default="-x 0.4 -y 1.96 -z 1.28 -R 0.014188 -P 0.690494 -Y -1.570168"/> -->
	<!-- <arg name="projector_pose" doc="The pose of the projector spawn location." default="-x 0.4 -y 1.0 -z 1.5 -R 0.0 -P 1.5707 -Y -1.5707"/> -->

	<arg name="no_objects"     default="true" />
	<arg name="use_moveit"     default="true" />
	<arg name="use_rviz"       default="true" />
	<arg name="use_gripper"    default="true" />
	<arg name="ur5_controller" default="ur5_joint_position_controller" />

	<!-- GAZEBO -->

	<!-- locate robot description -->
	<param if="$(arg use_gripper)"     name="robot_description" command="$(find xacro)/xacro $(find ur5_description)/robots/ur5_with_wsg.urdf.xacro"/>
	<param unless="$(arg use_gripper)" name="robot_description" command="$(find xacro)/xacro $(find ur5_description)/robots/ur5.urdf.xacro"/>

	<!-- gazebo arguments -->
	<arg name="paused" default="true"/>
	<arg name="use_sim_time" default="true"/>
	<arg name="gui" default="true"/>
	<arg name="headless" default="false"/>
	<arg name="debug" default="false"/>

	<!-- launch gazebo (empty world) -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find rovi_gazebo)/world/groundless.world"/>
		<arg name="debug" value="$(arg debug)"/>
		<arg name="gui" value="$(arg gui)"/>
		<arg name="paused" value="$(arg paused)"/>
		<arg name="use_sim_time" value="$(arg use_sim_time)"/>
		<arg name="headless" value="$(arg headless)"/>
	</include>

	<!-- spawn URDF robot model with gripper in gazebo -->
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model ur5
		$(arg robot_pose)
		-J ur5_joint1 1.57 -J ur5_joint2 -1.57 -J ur5_joint3 1.57 -J ur5_joint4 1.57 -J ur5_joint5 1.57 -J ur5_joint6 0
		-J wsg_base_mount_right_joint 0 -J wsg_base_mount_left_joint 0"/>

	<!-- spawn sensor(s) -->
	<node name="spawn_stereo_camera" pkg="gazebo_ros" type="spawn_model" args="-param camera_stereo -sdf -model camera_stereo $(arg camera_pose)"/>
	<node name="spawn_kinect" pkg="gazebo_ros" type="spawn_model" args="-param kinect -sdf -model openni_kinect $(arg kinect_pose)"/>
	<!-- <node name="spawn_projector" pkg="gazebo_ros" type="spawn_model" args="-param projector -sdf -model projector $(arg camera_pose)"/> -->

	<!-- spawn object(s) -->
	<node name="spawn_table" pkg="gazebo_ros" type="spawn_model" args="-param table -sdf -model table -z 0.64 -x 0.4 -y 0.6"/>
	<!-- <node name="spawn_bottle" pkg="gazebo_ros" type="spawn_model" args="-param bottle -sdf -model bottle -z 1.0 -x 0.6 -y 1.0"/> -->
	<node name="spawn_milk" pkg="gazebo_ros" type="spawn_model" args="-param milk -sdf -model milk -z 1.0 -x 0.25 -y 1.0"/>

	<!-- don't spawn all objects -->
	<group if="$(arg all_objects)">
  		<node name="spawn_mug" pkg="gazebo_ros" type="spawn_model" args="-param mug -sdf -model mug -z 1.0 -x 0.1 -y 1.0"/>
		<node name="spawn_milk" pkg="gazebo_ros" type="spawn_model" args="-param milk -sdf -model milk -z 1.0 -x 0.25 -y 1.0"/>
		<node name="spawn_coffecan" pkg="gazebo_ros" type="spawn_model" args="-param coffecan -sdf -model coffecan -z 1.0 -x 0.7 -y 1.0"/>
	</group>
	
	<!-- ROS CONTROL -->

	<!-- load controller configurations -->
	<rosparam file="$(find ur5_controllers)/config/ur5_controllers.yaml" command="load"/>
	<rosparam file="$(find ur5_controllers)/config/wsg_controllers.yaml" command="load"/>

	<!-- load the controllers -->
	<node name="ur5_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="ur5_joint_state_controller $(arg ur5_controller)"/>
	<node if="$(arg use_gripper)" name="wsg_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="wsg_joint_state_controller wsg_hybrid_controller"/>

	<!-- publish default setpoints for controllers -->
	<!-- <node pkg="rostopic" type="rostopic" name="default_wgc_setpoint" args="pub /wsg_group_controller/command std_msgs/Float64MultiArray '{data: 20.0 }'" output="screen"/> -->

	<!-- run a robot state publisher to take the joint values and publish them to tf -->
	<!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen"/> -->

	<!-- MOVE IT with OMPL -->
	<include if="$(arg use_moveit)" file="$(find ur5_moveit_config)/launch/default.launch">
		<arg name="use_rviz" value="$(arg use_rviz)"/>
	</include>

</launch>
